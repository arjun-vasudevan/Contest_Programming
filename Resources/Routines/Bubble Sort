/*
 This naive sorting algorithm involves repeated iterations of an array, comparing 
 every adjacent pair of elements, and swappping them if they are in the wrong order.
 
 Bubble sort has an average and worst case time complexity of O(nÂ²), and hence, 
 not optimal for large data sets.
 */


#include <algorithm> // swap

int[] bubbleSort(int[] arr, int len) {
	bool flag = true;
	int n = len;

	for (int i = 0; i < len && flag; i++) {
		flag = false;
		int newn = 0;

		for (int j = 0; j < n - 1; j++) {
			if (arr[j] > arr[j + 1]) {
				swap(arr[j], arr[j + 1]);
				flag = true;
				newn = i
			}
		}

		n = newn;
	}
}
